# pylint: disable-all
# Generated by Django 5.0.7 on 2024-08-04 05:08

import datetime
import django.db.models.deletion
import uuid
import wagtail.models
import wagtail.search.index
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0093_uploadedfile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('locked', models.BooleanField(default=False, editable=False, verbose_name='locked')),
                ('locked_at', models.DateTimeField(editable=False, null=True, verbose_name='locked at')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('update_time', models.DateTimeField(default=datetime.datetime(2024, 8, 4, 5, 8, 43, 928776, tzinfo=datetime.timezone.utc), verbose_name='更新时间')),
                ('sn', models.CharField(max_length=100, unique=True, verbose_name='序列号')),
                ('description', models.TextField(verbose_name='描述')),
                ('purchase_date', models.DateField(default=datetime.datetime(2024, 8, 4, 5, 8, 43, 928776, tzinfo=datetime.timezone.utc), verbose_name='采购日期')),
                ('purchase_prise', models.DecimalField(decimal_places=2, default=0, max_digits=64, verbose_name='采购价格')),
                ('warranty_period', models.DateField(default=datetime.datetime(2025, 8, 4, 5, 8, 43, 928776, tzinfo=datetime.timezone.utc), verbose_name='质保期')),
                ('on_move', models.BooleanField(default=False, verbose_name='转交中')),
                ('status', models.CharField(choices=[('normal', '正常'), ('scrap', '报废'), ('repair', '维修'), ('depreciation', '折旧'), ('other', '其他')], default='normal', max_length=100, verbose_name='资产状态')),
                ('repair_count', models.IntegerField(default=0, verbose_name='维修次数')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('locked_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='locked by')),
                ('move_to', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='moving_user', to=settings.AUTH_USER_MODEL, verbose_name='转交')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='asset_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Asset',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.models.WorkflowMixin, wagtail.models.PreviewableMixin, wagtail.search.index.Indexed, models.Model),
        ),
    ]
